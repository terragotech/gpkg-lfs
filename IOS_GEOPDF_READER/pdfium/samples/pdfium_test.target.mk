# This file is generated by gyp; do not edit.

TOOLSET := target
TARGET := pdfium_test
DEFS_Debug := \
	'-DPNG_PREFIX' \
	'-DPNGPREFIX_H' \
	'-DPNG_USE_READ_MACROS' \
	'-DV8_DEPRECATION_WARNINGS'

# Flags passed to all source files.
CFLAGS_Debug := \
	-Wall \
	-W \
	-Wno-missing-field-initializers \
	-Wno-sign-compare \
	-Wno-unused-parameter \
	-pthread \
	-fno-exceptions \
	-fPIC \
	-g \
	-O0 \
	-fdata-sections \
	-ffunction-sections

# Flags passed to only C files.
CFLAGS_C_Debug :=

# Flags passed to only C++ files.
CFLAGS_CC_Debug := \
	-std=c++0x \
	-Wnon-virtual-dtor \
	-fno-rtti

INCS_Debug := \
	-I.

DEFS_Debug_x64 := \
	'-DPNG_PREFIX' \
	'-DPNGPREFIX_H' \
	'-DPNG_USE_READ_MACROS' \
	'-DV8_DEPRECATION_WARNINGS'

# Flags passed to all source files.
CFLAGS_Debug_x64 := \
	-Wall \
	-W \
	-Wno-missing-field-initializers \
	-Wno-sign-compare \
	-Wno-unused-parameter \
	-pthread \
	-fno-exceptions \
	-fPIC \
	-g \
	-O0 \
	-fdata-sections \
	-ffunction-sections

# Flags passed to only C files.
CFLAGS_C_Debug_x64 :=

# Flags passed to only C++ files.
CFLAGS_CC_Debug_x64 := \
	-std=c++0x \
	-Wnon-virtual-dtor \
	-fno-rtti

INCS_Debug_x64 := \
	-I.

DEFS_Release := \
	'-DPNG_PREFIX' \
	'-DPNGPREFIX_H' \
	'-DPNG_USE_READ_MACROS' \
	'-DV8_DEPRECATION_WARNINGS'

# Flags passed to all source files.
CFLAGS_Release := \
	-Wall \
	-W \
	-Wno-missing-field-initializers \
	-Wno-sign-compare \
	-Wno-unused-parameter \
	-pthread \
	-fno-exceptions \
	-fPIC \
	-fno-strict-aliasing \
	-fdata-sections \
	-ffunction-sections \
	-O3 \
	-O2

# Flags passed to only C files.
CFLAGS_C_Release :=

# Flags passed to only C++ files.
CFLAGS_CC_Release := \
	-std=c++0x \
	-Wnon-virtual-dtor \
	-fno-rtti

INCS_Release := \
	-I.

DEFS_Release_x64 := \
	'-DPNG_PREFIX' \
	'-DPNGPREFIX_H' \
	'-DPNG_USE_READ_MACROS' \
	'-DV8_DEPRECATION_WARNINGS'

# Flags passed to all source files.
CFLAGS_Release_x64 := \
	-Wall \
	-W \
	-Wno-missing-field-initializers \
	-Wno-sign-compare \
	-Wno-unused-parameter \
	-pthread \
	-fno-exceptions \
	-fPIC \
	-fno-strict-aliasing \
	-fdata-sections \
	-ffunction-sections \
	-O3 \
	-O2

# Flags passed to only C files.
CFLAGS_C_Release_x64 :=

# Flags passed to only C++ files.
CFLAGS_CC_Release_x64 := \
	-std=c++0x \
	-Wnon-virtual-dtor \
	-fno-rtti

INCS_Release_x64 := \
	-I.

OBJS := \
	$(obj).target/$(TARGET)/samples/pdfium_test.o \
	$(obj).target/$(TARGET)/samples/image_diff_png.o

# Add to the list of files we specially track dependencies for.
all_deps += $(OBJS)

# Make sure our dependencies are built before any of us.
$(OBJS): | $(obj).target/samples/libfx_lpng.a $(obj).target/libpdfium.a $(obj).target/libfxcodec.a $(obj).target/third_party/libfx_lcms2.a $(obj).target/third_party/libfx_libjpeg.a $(obj).target/third_party/libfx_libopenjpeg.a $(obj).target/third_party/libfx_zlib.a $(obj).target/third_party/libbigint.a $(obj).target/third_party/pdfium_base.stamp $(obj).target/libfpdfapi.a $(obj).target/libfdrm.a $(obj).target/libfpdfdoc.a $(obj).target/libfpdftext.a $(obj).target/libformfiller.a $(obj).target/libfxcrt.a $(obj).target/libfxedit.a $(obj).target/libfxge.a $(obj).target/third_party/libfx_agg.a $(obj).target/libpdfwindow.a $(obj).target/third_party/libfreetype.a

# CFLAGS et al overrides must be target-local.
# See "Target-specific Variable Values" in the GNU Make manual.
$(OBJS): TOOLSET := $(TOOLSET)
$(OBJS): GYP_CFLAGS := $(DEFS_$(BUILDTYPE)) $(INCS_$(BUILDTYPE))  $(CFLAGS_$(BUILDTYPE)) $(CFLAGS_C_$(BUILDTYPE))
$(OBJS): GYP_CXXFLAGS := $(DEFS_$(BUILDTYPE)) $(INCS_$(BUILDTYPE))  $(CFLAGS_$(BUILDTYPE)) $(CFLAGS_CC_$(BUILDTYPE))

# Suffix rules, putting all outputs into $(obj).

$(obj).$(TOOLSET)/$(TARGET)/%.o: $(srcdir)/%.cc FORCE_DO_CMD
	@$(call do_cmd,cxx,1)

# Try building from generated source, too.

$(obj).$(TOOLSET)/$(TARGET)/%.o: $(obj).$(TOOLSET)/%.cc FORCE_DO_CMD
	@$(call do_cmd,cxx,1)

$(obj).$(TOOLSET)/$(TARGET)/%.o: $(obj)/%.cc FORCE_DO_CMD
	@$(call do_cmd,cxx,1)

# End of this set of suffix rules
### Rules for final target.
LDFLAGS_Debug := \
	-pthread

LDFLAGS_Debug_x64 := \
	-pthread

LDFLAGS_Release := \
	-pthread

LDFLAGS_Release_x64 := \
	-pthread

LIBS := \
	-lfpdfapi

$(builddir)/pdfium_test: GYP_LDFLAGS := $(LDFLAGS_$(BUILDTYPE))
$(builddir)/pdfium_test: LIBS := $(LIBS)
$(builddir)/pdfium_test: LD_INPUTS := $(OBJS) $(obj).target/samples/libfx_lpng.a $(obj).target/libpdfium.a $(obj).target/libfxcodec.a $(obj).target/third_party/libfx_lcms2.a $(obj).target/third_party/libfx_libjpeg.a $(obj).target/third_party/libfx_libopenjpeg.a $(obj).target/third_party/libfx_zlib.a $(obj).target/third_party/libbigint.a $(obj).target/libfpdfapi.a $(obj).target/libfdrm.a $(obj).target/libfpdfdoc.a $(obj).target/libfpdftext.a $(obj).target/libformfiller.a $(obj).target/libfxcrt.a $(obj).target/libfxedit.a $(obj).target/libfxge.a $(obj).target/third_party/libfx_agg.a $(obj).target/libpdfwindow.a $(obj).target/third_party/libfreetype.a
$(builddir)/pdfium_test: TOOLSET := $(TOOLSET)
$(builddir)/pdfium_test: $(OBJS) $(obj).target/samples/libfx_lpng.a $(obj).target/libpdfium.a $(obj).target/libfxcodec.a $(obj).target/third_party/libfx_lcms2.a $(obj).target/third_party/libfx_libjpeg.a $(obj).target/third_party/libfx_libopenjpeg.a $(obj).target/third_party/libfx_zlib.a $(obj).target/third_party/libbigint.a $(obj).target/libfpdfapi.a $(obj).target/libfdrm.a $(obj).target/libfpdfdoc.a $(obj).target/libfpdftext.a $(obj).target/libformfiller.a $(obj).target/libfxcrt.a $(obj).target/libfxedit.a $(obj).target/libfxge.a $(obj).target/third_party/libfx_agg.a $(obj).target/libpdfwindow.a $(obj).target/third_party/libfreetype.a FORCE_DO_CMD
	$(call do_cmd,link)

all_deps += $(builddir)/pdfium_test
# Add target alias
.PHONY: pdfium_test
pdfium_test: $(builddir)/pdfium_test

# Add executable to "all" target.
.PHONY: all
all: $(builddir)/pdfium_test

